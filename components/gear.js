import Image from "next/image";
import { useState } from "react";

function PerGear({ image, name, content }) {
    return (
        <div className="container bg-secondBG flex gap-5 p-3 rounded-md"> 
            <Image className="rounded"
                src={image}
                width={90}
                height={54}
                alt="gear_photo"
            />
            <div className="container flex flex-col justify-between text-sm text-textColor">
                <div className="font-medium flex justify-between">
                    {name}
                    <div className="flex font-normal">
                        Edit
                        <svg width="22" height="22" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path d="M9.70498 6L8.29498 7.41L12.875 12L8.29498 16.59L9.70498 18L15.705 12L9.70498 6Z" fill="#B8B8B8"/></svg>
                    </div>
                </div>
                {content}
            </div>
        </div>
    );
}

function GearUnselected({ expanded, toggleList }) {
    return (
        <div className="container flex justify-between font-medium text-textColor" 
        onClick={toggleList}>
            <div className="flex items-center gap-4 text-sm">
                <svg width="24" height="24" viewBox="0 0 24 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
                    <path d="M17.6238 13.2464C17.1353 13.2456 16.6508 13.3262 16.1891 13.4866C15.5524 12.595 15.5524 11.3965 16.1891 10.5048C17.4455 10.9388 18.8306 10.7792 19.9541 10.0692C21.0777 9.36 21.8171 8.17771 21.9645 6.85703C22.1118 5.53633 21.6502 4.2206 20.7105 3.28092C19.7709 2.34128 18.4551 1.8796 17.1344 2.02699C15.8137 2.17437 14.6314 2.9137 13.9223 4.03735C13.2122 5.16101 13.0526 6.54601 13.4866 7.80232C12.595 8.43906 11.3965 8.43906 10.5048 7.80232C10.9388 6.54595 10.7792 5.16088 10.0692 4.03735C9.36 2.9137 8.17771 2.17436 6.85703 2.02699C5.53633 1.87961 4.2206 2.34128 3.28092 3.28092C2.34128 4.22056 1.8796 5.53631 2.02699 6.85703C2.17437 8.17773 2.9137 9.36006 4.03735 10.0692C5.16101 10.7792 6.54601 10.9388 7.80232 10.5048C8.43906 11.3964 8.43906 12.5949 7.80232 13.4866C6.54595 13.0527 5.16088 13.2122 4.03735 13.9223C2.9137 14.6314 2.17436 15.8137 2.02699 17.1344C1.87961 18.4551 2.34128 19.7708 3.28092 20.7105C4.22056 21.6502 5.53631 22.1119 6.85703 21.9645C8.17773 21.8171 9.36006 21.0777 10.0692 19.9541C10.7792 18.8304 10.9388 17.4454 10.5048 16.1891C11.3964 15.5524 12.5949 15.5524 13.4866 16.1891C13.0787 17.3657 13.1911 18.6611 13.7961 19.7498C14.401 20.8385 15.4408 21.6177 16.6557 21.8929C17.8706 22.1681 19.1448 21.9124 20.1595 21.191C21.1749 20.4687 21.8344 19.3483 21.9728 18.1108C22.1113 16.8731 21.7163 15.6346 20.8858 14.7064C20.0561 13.7782 18.8698 13.2465 17.6241 13.2465L17.6238 13.2464ZM19.3468 15.0166L18.5081 15.8553L17.1809 14.5281C17.3274 14.5077 17.4756 14.4971 17.6238 14.4971C18.237 14.4963 18.8362 14.6771 19.3468 15.0166ZM17.1808 9.46339L18.508 8.13617L19.3467 8.97483C18.8362 9.31437 18.2369 9.49513 17.6237 9.49432C17.4755 9.49432 17.3274 9.48374 17.1808 9.46339ZM20.7504 6.36754C20.7513 6.98066 20.5705 7.57995 20.231 8.09047L19.3166 7.17608L19.3174 7.17689C19.6577 6.45955 19.5103 5.60458 18.9493 5.04365C18.3875 4.48182 17.5334 4.33445 16.8161 4.67562L15.9017 3.76122C16.5327 3.34352 17.2933 3.16928 18.0431 3.27104C18.793 3.37201 19.4802 3.74167 19.9785 4.31084C20.476 4.88081 20.7504 5.6111 20.7504 6.36754ZM15.0165 4.6446L15.8552 5.48326L14.5279 6.81049C14.5076 6.66392 14.497 6.51572 14.497 6.36754C14.4962 5.75441 14.6769 5.15513 15.0165 4.6446ZM9.46326 6.81057L8.13604 5.48335L8.97471 4.64468C9.31424 5.15521 9.49501 5.75449 9.4942 6.36762C9.4942 6.51581 9.48362 6.66401 9.46326 6.81057ZM6.36741 3.24092C6.98054 3.2401 7.57982 3.42087 8.09035 3.76041L7.17596 4.6748C6.45861 4.33201 5.60283 4.47938 5.04104 5.04121C4.4784 5.60385 4.33185 6.45882 4.67464 7.17612L3.76024 8.09052C3.34254 7.45948 3.1683 6.69815 3.26925 5.94831C3.37021 5.19838 3.73988 4.51117 4.30985 4.01284C4.87983 3.51451 5.61098 3.24092 6.36741 3.24092ZM4.64447 8.97487L5.48314 8.13621L6.81036 9.46343C6.6638 9.48379 6.5156 9.49437 6.36741 9.49437C5.75429 9.49518 5.155 9.31441 4.64447 8.97487ZM6.81044 14.5281L5.48322 15.8553L4.64456 15.0167C5.15509 14.6771 5.75437 14.4964 6.3675 14.4972C6.51569 14.4972 6.66389 14.5077 6.81044 14.5281ZM3.24079 17.624C3.23998 17.0108 3.42074 16.4115 3.76029 15.901L4.67468 16.8154L4.67386 16.8146C4.3327 17.5328 4.48007 18.3877 5.0419 18.9495C5.60454 19.5113 6.45869 19.6579 7.17681 19.3159L8.0912 20.2303H8.09039C7.45936 20.648 6.69884 20.8223 5.94901 20.7213C5.19909 20.6203 4.51107 20.2507 4.01273 19.6815C3.51523 19.1115 3.24079 18.3804 3.24079 17.624ZM8.97475 19.3469L8.13608 18.5082L9.4633 17.181C9.48366 17.3276 9.49425 17.4758 9.49425 17.624C9.49506 18.2371 9.31429 18.8364 8.97475 19.3469ZM5.92538 6.80986C5.68844 6.56477 5.69169 6.17474 5.93271 5.93293C6.17455 5.69192 6.56455 5.68865 6.80964 5.9256L9.29725 8.4132C10.013 9.12892 10.9835 9.53116 11.9956 9.53116C13.0076 9.53116 13.9783 9.12892 14.6939 8.4132L17.1815 5.9256C17.4266 5.68866 17.8167 5.69191 18.0585 5.93293C18.2995 6.17477 18.3027 6.56477 18.0658 6.80986L15.5782 9.29746C14.8625 10.0132 14.4602 10.9838 14.4602 11.9958C14.4602 13.0079 14.8625 13.9785 15.5782 14.6941L18.0658 17.1818C18.3027 17.4268 18.2995 17.8169 18.0585 18.0587C17.8166 18.2997 17.4266 18.303 17.1815 18.066L14.6939 15.5784C13.9782 14.8627 13.0076 14.4605 11.9956 14.4605C10.9835 14.4605 10.0129 14.8627 9.29725 15.5784L6.80964 18.066C6.56455 18.303 6.17453 18.2997 5.93271 18.0587C5.6917 17.8168 5.68843 17.4268 5.92538 17.1818L8.41298 14.6941C9.12871 13.9784 9.53095 13.0079 9.53095 11.9958C9.53095 10.9838 9.12871 10.0131 8.41298 9.29746L5.92538 6.80986ZM14.528 17.1809L15.8552 18.5081L15.0165 19.3468C14.677 18.8363 14.4962 18.237 14.497 17.6239C14.497 17.4757 14.5076 17.3275 14.528 17.1809ZM17.6238 20.7506C17.0107 20.7514 16.4114 20.5706 15.9009 20.2311L16.8153 19.3159V19.3167C17.5326 19.6595 18.3884 19.5121 18.9502 18.9503C19.5128 18.3876 19.6594 17.5327 19.3166 16.8154L20.2318 15.901V15.9002C20.6495 16.5312 20.8246 17.2925 20.7228 18.0432C20.6218 18.7931 20.2522 19.4811 19.6822 19.9787C19.1122 20.477 18.3811 20.7514 17.6238 20.7506Z" fill="#currentColor"/>
                </svg>
                Your Gears
            </div>
            <div className={`${expanded ? "rotate-90" : ""} transition`}>
                <svg  width="24" height="24" viewBox="0 0 24 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
                    <path d="M9.70498 6L8.29498 7.41L12.875 12L8.29498 16.59L9.70498 18L15.705 12L9.70498 6Z" fill="currentColor"/></svg>
            </div>
        </div>
    );
};

function GearList() {
    return (
        <div className="flex">
            <div className="w-[40px]"></div>
            <div className="container flex flex-col gap-2">
                <PerGear
                    image="/images/test.png"
                    name="Freestyle"
                    content="5 inch, Speedybee F722"
                />
                <PerGear
                    image="/images/test.png"
                    name="Freestyle"
                    content="5 inch, Speedybee F722"
                />
                <div className="h-10 bg-secondBG rounded-md px-4 font-medium flex items-center justify-between text-sm text-textColor">
                    Add Presets
                    <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <rect x="11.2" y="6.00195" width="1.6" height="12" rx="0.8" fill="#EDEDED"/>
                        <rect x="18" y="11.2019" width="1.6" height="12" rx="0.8" transform="rotate(90 18 11.2019)" fill="#EDEDED"/>
                    </svg>
                </div>
            </div>
        </div>
    )
}

export default function Gear() {
    const [expanded, setExpanded] = useState(true);

    function handleClick() {
        setExpanded(!expanded);
    }

    return(
        <div className="flex flex-col gap-2">
            <GearUnselected expanded={expanded} toggleList={handleClick}/>
            <div className={`grid ${expanded ? "grid-row-[1fr] opacity-100" : "grid-row-[0fr] opacity-0"} overflow-hidden transition-all`}>
                <GearList/>
            </div>
        </div>
    )
}